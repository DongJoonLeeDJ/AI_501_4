1.
0부터 시작해서 값을 하나씩 증가시키며 9까지 출력을 보이는 코드를 while루프를 기반으로 작성해보자.

2.
9에서부터 값을 하나씩 감소시키며 0까지 출력을 보이는 코드를 while 루프를 기반으로 작성해보자.

3.
다음 수식의 빈칸에 들어갈 '수'를 찾는 코드를 작성해보자. 단 X에 들어갈 수는 1부터 시작해서 1씩 증가시켜가면서 찾기로 하자

3*X/2 = 63

X에 들어갈 '수'를 찾는 코드는 다음과 같은 방식으로 작성하기로 하자
num = 0	# num 값이 위 수식의 빈칸에 넣어 볼 값이다.
	# 필요하면 변수도 선언하고
	# 이 위치에서 while 루프를 작성한다.
...

print(num)	#while 루프 탈출후, num에는 X에 들어갈 42가 저장되어야 한다.
다양한 결과가 존재할 수 있는데, 위에서 보이듯이 최종적으로 num에 저장된 값이 42이면, 그리고 while 루프를 통해서 그 값을 찾았다면 모두 답으로 인정한다.

4.
6과 45의 최소공배수를 구하는 코드를 while 루프 기반으로 작성해보자. 참고로 6으로도 나눠지고 45로도 나눠지는 값들 중에서 제일 작은 값이 '최소공배수'이다. 따라서 45부터 시작해서 값을 1씩 증가시켜가면서 6과 45로 나누어 떨어지는 첫 번째 값을 찾으면 된다. 코드는 다음과 같이 작성하자.

lcm = 0 		#변수 lcm을 선언하고, 그리고 필요하면 변수를 추가로 선언하고
		#변수 lcm에 최소공배수를 찾아서 저장하는 코드를 구성하고
print(lcm)		#변수 lcm에 저장된 값을 출력한다(90이 출력되어야 정답이다.)
90

5.
42와 120의 최대공약수를 구하는 코드를 while루프 기반으로 작성해보자 참고로 42도 나눌수 있고 120도 나눌수 있는 값들 중에서 제일 큰값이 '최대공약수'이다. 따라서 42부터 시작해서 값을 1씩 감소시켜가면서 42와 120을 나눌 수 있는 값을 찾으면 된다 코드는 다음과 같이 작성하자.
gcm = 0 		#변수 gcm을 선언하고, 그리고 필요하면 변수를 추가로 선언하고
		#변수 gcm에 최대 공약수를 찾아서 저장하는 코드를 구성하고
print(gcm)	#변수 gcm에 저장된 값을 출력한다(6이 출력되어야정답이다.)
6

6. 다음은 구구단 중에서 7단을 출력하는 예제이다
for i in range(1,10):
	print(7*i,end = ' ')

7 14 21 28 35 42 49 56 63
위의 예제에서 continue 관련 코드를 넣어서 결과가 짝수인 경우에만 출력하도록 하자. 즉
7은 출력되지 않고 14는 출력되어야한다.

7. 
2 이상 100미만의 정수 중에서 2로 나누어지지 않고 동시에 3으로도 
나누어지지 않는 수를 찾아서 출력하는 코드를 while 루프를 기반으로 작성해보자
